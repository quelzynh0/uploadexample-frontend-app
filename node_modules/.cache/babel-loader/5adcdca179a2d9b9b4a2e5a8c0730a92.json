{"ast":null,"code":"import _defineProperty from \"E:\\\\TCC\\\\uploadexample\\\\xfrontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\TCC\\\\uploadexample\\\\xfrontend\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { uniqueId } from \"lodash\";\nimport filesize from \"filesize\";\nimport api from \"./services/api\";\nimport GlobalStyle from \"./styles/global\";\nimport { Container, Content } from \"./styles\";\nimport Upload from \"./components/Upload\";\nimport FileList from \"./components/FileList\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      uploadedFiles: []\n    };\n\n    this.handleUpload = files => {\n      const uploadedFiles = files.map(file => ({\n        file,\n        id: uniqueId(),\n        name: file.name,\n        readableSize: filesize(file.size),\n        preview: URL.createObjectURL(file),\n        progress: 0,\n        uploaded: false,\n        error: false,\n        url: null\n      }));\n      this.setState({\n        uploadedFiles: this.state.uploadedFiles.concat(uploadedFiles)\n      });\n      uploadedFiles.forEach(this.processUpload);\n    };\n\n    this.updateFile = (id, data) => {\n      this.setState({\n        uploadedFiles: this.state.uploadedFiles.map(uploadedFile => {\n          return id === uploadedFile.id ? _objectSpread({}, uploadedFile, {}, data) : uploadedFile;\n        })\n      });\n    };\n\n    this.processUpload = uploadedFile => {\n      const data = new FormData();\n      data.append(\"file\", uploadedFile.file, uploadedFile.name);\n      api.post(\"posts\", data, {\n        onUploadProgress: e => {\n          const progress = parseInt(Math.round(e.loaded * 100 / e.total));\n          this.updateFile(uploadedFile.id, {\n            progress\n          });\n        }\n      }).then(response => {\n        this.updateFile(uploadedFile.id, {\n          uploaded: true,\n          id: response.data._id,\n          url: response.data.url\n        });\n      }).catch(() => {\n        this.updateFile(uploadedFile.id, {\n          error: true\n        });\n      });\n    };\n\n    this.handleDelete = async id => {\n      await api.delete(\"posts/\".concat(id));\n      this.setState({\n        uploadedFiles: this.state.uploadedFiles.filter(file => file.id !== id)\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const response = await api.get(\"posts\");\n    this.setState({\n      uploadedFiles: response.data.map(file => ({\n        id: file._id,\n        name: file.name,\n        readableSize: filesize(file.size),\n        preview: file.url,\n        uploaded: true,\n        url: file.url\n      }))\n    });\n  }\n\n  componentWillUnmount() {\n    this.state.uploadedFiles.forEach(file => URL.revokeObjectURL(file.preview));\n  }\n\n  render() {\n    const uploadedFiles = this.state.uploadedFiles;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Upload, {\n      onUpload: this.handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), !!uploadedFiles.length && React.createElement(FileList, {\n      files: uploadedFiles,\n      onDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(GlobalStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:\\TCC\\uploadexample\\xfrontend\\src\\App.js"],"names":["React","Component","uniqueId","filesize","api","GlobalStyle","Container","Content","Upload","FileList","App","state","uploadedFiles","handleUpload","files","map","file","id","name","readableSize","size","preview","URL","createObjectURL","progress","uploaded","error","url","setState","concat","forEach","processUpload","updateFile","data","uploadedFile","FormData","append","post","onUploadProgress","e","parseInt","Math","round","loaded","total","then","response","_id","catch","handleDelete","delete","filter","componentDidMount","get","componentWillUnmount","revokeObjectURL","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { uniqueId } from \"lodash\";\nimport filesize from \"filesize\";\n\nimport api from \"./services/api\";\n\nimport GlobalStyle from \"./styles/global\";\nimport { Container, Content } from \"./styles\";\n\nimport Upload from \"./components/Upload\";\nimport FileList from \"./components/FileList\";\n\nclass App extends Component {\n  state = {\n    uploadedFiles: []\n  };\n\n  async componentDidMount() {\n    const response = await api.get(\"posts\");\n\n    this.setState({\n      uploadedFiles: response.data.map(file => ({\n        id: file._id,\n        name: file.name,\n        readableSize: filesize(file.size),\n        preview: file.url,\n        uploaded: true,\n        url: file.url\n      }))\n    });\n  }\n\n  handleUpload = files => {\n    const uploadedFiles = files.map(file => ({\n      file,\n      id: uniqueId(),\n      name: file.name,\n      readableSize: filesize(file.size),\n      preview: URL.createObjectURL(file),\n      progress: 0,\n      uploaded: false,\n      error: false,\n      url: null\n    }));\n\n    this.setState({\n      uploadedFiles: this.state.uploadedFiles.concat(uploadedFiles)\n    });\n\n    uploadedFiles.forEach(this.processUpload);\n  };\n\n  updateFile = (id, data) => {\n    this.setState({\n      uploadedFiles: this.state.uploadedFiles.map(uploadedFile => {\n        return id === uploadedFile.id\n          ? { ...uploadedFile, ...data }\n          : uploadedFile;\n      })\n    });\n  };\n\n  processUpload = uploadedFile => {\n    const data = new FormData();\n\n    data.append(\"file\", uploadedFile.file, uploadedFile.name);\n\n    api\n      .post(\"posts\", data, {\n        onUploadProgress: e => {\n          const progress = parseInt(Math.round((e.loaded * 100) / e.total));\n\n          this.updateFile(uploadedFile.id, {\n            progress\n          });\n        }\n      })\n      .then(response => {\n        this.updateFile(uploadedFile.id, {\n          uploaded: true,\n          id: response.data._id,\n          url: response.data.url\n        });\n      })\n      .catch(() => {\n        this.updateFile(uploadedFile.id, {\n          error: true\n        });\n      });\n  };\n\n  handleDelete = async id => {\n    await api.delete(`posts/${id}`);\n\n    this.setState({\n      uploadedFiles: this.state.uploadedFiles.filter(file => file.id !== id)\n    });\n  };\n\n  componentWillUnmount() {\n    this.state.uploadedFiles.forEach(file => URL.revokeObjectURL(file.preview));\n  }\n\n  render() {\n    const { uploadedFiles } = this.state;\n\n    return (\n      <Container>\n        <Content>\n          <Upload onUpload={this.handleUpload} />\n          {!!uploadedFiles.length && (\n            <FileList files={uploadedFiles} onDelete={this.handleDelete} />\n          )}\n        </Content>\n        <GlobalStyle />\n      </Container>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}