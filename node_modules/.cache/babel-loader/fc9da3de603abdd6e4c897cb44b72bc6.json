{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\queel1\\\\Desktop\\\\uploadexample\\\\frontend\\\\src\\\\components\\\\Upload\\\\index.js\";\nimport React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { DropContainer, UploadMessage } from \"./styles\";\nexport default class Upload extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderDragMessage = (isDragActive, isDragReject) => {\n      if (!isDragActive) {\n        return React.createElement(UploadMessage, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, \"Arraste arquivos aqui...\");\n      }\n\n      if (isDragReject) {\n        return React.createElement(UploadMessage, {\n          type: \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"Arquivo n\\xE3o suportado\");\n      }\n\n      return React.createElement(UploadMessage, {\n        type: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Solte os arquivos aqui\");\n    };\n  }\n\n  render() {\n    const onUpload = this.props.onUpload;\n    return React.createElement(Dropzone, {\n      accept: \"image/*\",\n      onDropAccepted: onUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      isDragReject\n    }) => React.createElement(DropContainer, Object.assign({}, getRootProps(), {\n      isDragActive: isDragActive,\n      isDragReject: isDragReject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), this.renderDragMessage(isDragActive, isDragReject)));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\queel1\\Desktop\\uploadexample\\frontend\\src\\components\\Upload\\index.js"],"names":["React","Component","Dropzone","DropContainer","UploadMessage","Upload","renderDragMessage","isDragActive","isDragReject","render","onUpload","props","getRootProps","getInputProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,UAA7C;AAEA,eAAe,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC5CK,iBAD4C,GACxB,CAACC,YAAD,EAAeC,YAAf,KAAgC;AAClD,UAAI,CAACD,YAAL,EAAmB;AACjB,eAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAP;AACD;;AAED,UAAIC,YAAJ,EAAkB;AAChB,eAAO,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAP;AACD;;AAED,aAAO,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACD,KAX2C;AAAA;;AAa5CC,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAGP,WACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,SAAjB;AAA2B,MAAA,cAAc,EAAEA,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEE,MAAAA,YAAF;AAAgBC,MAAAA,aAAhB;AAA+BN,MAAAA,YAA/B;AAA6CC,MAAAA;AAA7C,KAAD,KACC,oBAAC,aAAD,oBACMI,YAAY,EADlB;AAEE,MAAA,YAAY,EAAEL,YAFhB;AAGE,MAAA,YAAY,EAAEC,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKE,+CAAWK,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALF,EAMG,KAAKP,iBAAL,CAAuBC,YAAvB,EAAqCC,YAArC,CANH,CAFJ,CADF;AAcD;;AA9B2C","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nimport { DropContainer, UploadMessage } from \"./styles\";\r\n\r\nexport default class Upload extends Component {\r\n  renderDragMessage = (isDragActive, isDragReject) => {\r\n    if (!isDragActive) {\r\n      return <UploadMessage>Arraste arquivos aqui...</UploadMessage>;\r\n    }\r\n\r\n    if (isDragReject) {\r\n      return <UploadMessage type=\"error\">Arquivo n√£o suportado</UploadMessage>;\r\n    }\r\n\r\n    return <UploadMessage type=\"success\">Solte os arquivos aqui</UploadMessage>;\r\n  };\r\n\r\n  render() {\r\n    const { onUpload } = this.props;\r\n\r\n    return (\r\n      <Dropzone accept=\"image/*\" onDropAccepted={onUpload}>\r\n        {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\r\n          <DropContainer\r\n            {...getRootProps()}\r\n            isDragActive={isDragActive}\r\n            isDragReject={isDragReject}\r\n          >\r\n            <input {...getInputProps()} />\r\n            {this.renderDragMessage(isDragActive, isDragReject)}\r\n          </DropContainer>\r\n        )}\r\n      </Dropzone>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}